// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// contains
bool contains(const std::string& str, const std::string substr);
RcppExport SEXP microarrayTools_contains(SEXP strSEXP, SEXP substrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const std::string& >::type str(strSEXP);
    Rcpp::traits::input_parameter< const std::string >::type substr(substrSEXP);
    __result = Rcpp::wrap(contains(str, substr));
    return __result;
END_RCPP
}
// searchDesc
int searchDesc(std::vector< std::string > desc, std::vector< std::string > searchTerms);
RcppExport SEXP microarrayTools_searchDesc(SEXP descSEXP, SEXP searchTermsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector< std::string > >::type desc(descSEXP);
    Rcpp::traits::input_parameter< std::vector< std::string > >::type searchTerms(searchTermsSEXP);
    __result = Rcpp::wrap(searchDesc(desc, searchTerms));
    return __result;
END_RCPP
}
// containsString
bool containsString(const std::string& str, const std::string substr);
RcppExport SEXP microarrayTools_containsString(SEXP strSEXP, SEXP substrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const std::string& >::type str(strSEXP);
    Rcpp::traits::input_parameter< const std::string >::type substr(substrSEXP);
    __result = Rcpp::wrap(containsString(str, substr));
    return __result;
END_RCPP
}
// searchDescReturnHits
NumericVector searchDescReturnHits(std::vector< std::string > desc, std::vector< std::string > searchTerms);
RcppExport SEXP microarrayTools_searchDescReturnHits(SEXP descSEXP, SEXP searchTermsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector< std::string > >::type desc(descSEXP);
    Rcpp::traits::input_parameter< std::vector< std::string > >::type searchTerms(searchTermsSEXP);
    __result = Rcpp::wrap(searchDescReturnHits(desc, searchTerms));
    return __result;
END_RCPP
}
